/*!
 * bemoje-chess-engine v0.0.0
 * (c) Benjamin MÃ¸ller Jensen
 * Released under the MIT License.
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self)["bemoje-chess-engine"]={})}(this,(function(t){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var extendStatics=function(t,e){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(t,e)};function __extends(t,e){function __(){this.constructor=t}extendStatics(t,e),t.prototype=null===e?Object.create(e):(__.prototype=e.prototype,new __)}function __spreadArrays(){for(var t=0,e=0,o=arguments.length;e<o;e++)t+=arguments[e].length;var i=Array(t),n=0;for(e=0;e<o;e++)for(var r=arguments[e],s=0,u=r.length;s<u;s++,n++)i[n]=r[s];return i}var e=function(){function Piece(t,e,o){this.player=t,this.index=e,this.position=o,this.moveCount=0,this.player.game.board.setPiece(this)}return Object.defineProperty(Piece.prototype,"game",{get:function(){return this.player.game},enumerable:!1,configurable:!0}),Object.defineProperty(Piece.prototype,"type",{get:function(){return this.constructor.name},enumerable:!1,configurable:!0}),Object.defineProperty(Piece.prototype,"hasMoved",{get:function(){return this.moveCount>0},enumerable:!1,configurable:!0}),Object.defineProperty(Piece.prototype,"color",{get:function(){return this.player.color},enumerable:!1,configurable:!0}),Object.defineProperty(Piece.prototype,"isTaken",{get:function(){return null===this.position},enumerable:!1,configurable:!0}),Object.defineProperty(Piece.prototype,"moves",{get:function(){var t=this;return this.player.game.moves.filter((function(e){return e.piece===t}))},enumerable:!1,configurable:!0}),Piece.prototype.registerMove=function(t){this.moveCount++,this.position=t.to.clone()},Piece.prototype.remove=function(){this.position=null},Piece.prototype.isMoveTargetOwnPiece=function(t){var e=this.game.board.getPieceByPosition(t);return null!==e&&this.player===e.player},Object.defineProperty(Piece.prototype,"isOwnTurn",{get:function(){return this.game.activePlayer===this.player},enumerable:!1,configurable:!0}),Piece.prototype.forEachValidMovePosition=function(t){if(this.isOwnTurn)for(var e=this.getMovePositionsWithinBounds(),o=0;o<e.length;o++){var i=e[o];if(Array.isArray(i)){for(var n=0;n<i.length&&(i[n]&&this.isMoveTargetOwnPiece(i[n]));n++)if(t(i[n]))return!0}else if(this.isMoveTargetOwnPiece(i)&&t(i))return!0}},Piece.prototype.isCastleMove=function(t){return!1},Piece.prototype.isValidMove=function(t){return this.isCastleMove(t)||!!this.forEachValidMovePosition((function(e){return e.compare(t)}))},Piece}(),o=function(t){function Bishop(){return null!==t&&t.apply(this,arguments)||this}return __extends(Bishop,t),Bishop.prototype.getMovePositionsWithinBounds=function(){var t=this.position;return t?t.getAllDiagonalRecursive():[]},Bishop}(e);function arrClean(t){for(var e=[],o=t.length,i=0;i<o;i++){var n=t[i];n&&e.push(n)}return e}function createAssertFunction(t,e){var f=function(o,i){if(void 0===i&&(i="arg"),!e(o))throw new TypeError("Expected "+i+" to be "+t+". "+i+": "+o)};return Object.defineProperty(f,"name",{value:e.name.replace(/^is/,"assert")}),f}function isEven(t){return t%2==0}var i="A".charCodeAt(0);function from_X_to_A(t){return String.fromCharCode(t+i)}function from_Y_to_1(t){return(t+1).toString()}function from_A_to_X(t){return t.toUpperCase().charCodeAt(0)-i}function from_1_to_Y(t){return Number(t.charAt(0))-1}function from_XY_to_A1(t){return from_X_to_A(t[0])+from_Y_to_1(t[1])}function from_A1_to_XY(t){return[from_A_to_X(t.charAt(0)),from_1_to_Y(t.charAt(1))]}function isValidXYPoint(t){return t>=0&&t<=7}function isValidXY(t){return isValidXYPoint(t[0])&&isValidXYPoint(t[1])}function isValidA1(t){return 2===t.length&&isValidXY(from_A1_to_XY(t))}var n=createAssertFunction("a positive integer between 0 and 7",isValidXYPoint),r=createAssertFunction("an array containing two positive integers between 0 and 7",isValidXY),s=createAssertFunction("a valid A1-notation string",isValidA1),u=function(){function Board(t){this.game=t,this.grid=[];for(var e=0;e<8;)this.grid.push(new Array(8).fill(null,0,7)),e++}return Board.prototype.getPieceByXY=function(t,e){return this.grid[e][t]},Board.prototype.getPieceByPosition=function(t){return this.getPieceByXY(t.x,t.y)},Board.prototype.getPieceByA1=function(t){var e=from_A1_to_XY(t),o=e[0],i=e[1];return this.getPieceByXY(o,i)},Board.prototype.setPiece=function(t){var e=t.position;e&&(this.grid[e.y][e.x]=t)},Board.prototype.removePiece=function(t){if(t){var e=t.position;e&&(this.grid[e.y][e.x]=null)}},Board.prototype.registerMove=function(t){var e=t.from,o=t.to,i=this.grid[e.y][e.x];this.grid[o.y][o.x]=i,this.grid[e.y][e.x]=null},Board.prototype.registerSwap=function(t){var e=t.from,o=t.to,i=this.grid[e.y][e.x],n=this.grid[o.y][o.x];this.grid[o.y][o.x]=i,this.grid[e.y][e.x]=n},Board}(),a=function(t){function King(){return null!==t&&t.apply(this,arguments)||this}return __extends(King,t),King.prototype.getMovePositionsWithinBounds=function(){var t=this.position;return t?t.getAllStraightAndDiagonal():[]},King.prototype.isCastleMove=function(t){var e=this.game.board.getPieceByPosition(t);return!!e&&("Rook"===e.type&&!e.hasMoved&&!this.hasMoved)},King}(e),c=function(t){function Knight(){return null!==t&&t.apply(this,arguments)||this}return __extends(Knight,t),Knight.prototype.getMovePositionsWithinBounds=function(){var t=this.position;return t?t.getAllKnightMovePositions():[]},Knight}(e),h=function(){function Move(t,e,o){void 0===o&&(o=null);var i=t.position;if(!i)throw new Error("Cannot move a piece that is not on the board.");this.piece=t,this.takes=o,this.from=i.clone(),this.to=e.clone()}return Move.prototype.toJSON=function(){return[this.from.x,this.from.y,this.to.x,this.to.y]},Move}(),p=function(t){function Pawn(){return null!==t&&t.apply(this,arguments)||this}return __extends(Pawn,t),Pawn.prototype.getMovePositionsWithinBounds=function(){var t=this.game.board,e=this.position,o=[];if(!e)return[];if("white"===this.color){var i=e.getUp();i&&o.push(i);var n=e.getUpUp();n&&!this.hasMoved&&o.push(n);var r=e.getUpLeft();if(r)if(c=t.getPieceByPosition(r))(g=c.position)&&"black"===c.color&&o.push(g.clone());var s=e.getUpRight();if(s)if(p=t.getPieceByPosition(s))(g=p.position)&&"black"===p.color&&o.push(g.clone())}else{var u=e.getDown();u&&o.push(u);var a=e.getDownDown();a&&!this.hasMoved&&o.push(a);var c,h=e.getDownLeft();if(h)if(c=t.getPieceByPosition(h))(g=c.position)&&"white"===c.color&&o.push(g.clone());var p,g,l=e.getDownRight();if(l)if(p=t.getPieceByPosition(l))(g=p.position)&&"white"===p.color&&o.push(g.clone())}return o},Pawn}(e),g=function(){function Position(t,e,o){void 0===o&&(o=!1),o||r([t,e],"x and y"),this.x=t,this.y=e}return Position.fromA1=function(t){var e=from_A1_to_XY(t);return new Position(e[0],e[1])},Position.fromXY=function(t){return new Position(t[0],t[1])},Object.defineProperty(Position.prototype,"A1",{get:function(){return from_XY_to_A1([this.x,this.y])},enumerable:!1,configurable:!0}),Object.defineProperty(Position.prototype,"XY",{get:function(){return[this.x,this.y]},enumerable:!1,configurable:!0}),Position.prototype.compare=function(t){return this.x===t.x&&this.y===t.y},Position.prototype.clone=function(){return new Position(this.x,this.y,!0)},Position.prototype.toArray=function(){return[this.x,this.y]},Position.prototype.getModulation=function(t,e){try{return new Position(this.x+t,this.y+e)}catch(t){return null}},Position.prototype.getUp=function(){return this.getModulation(0,1)},Position.prototype.getDown=function(){return this.getModulation(0,-1)},Position.prototype.getLeft=function(){return this.getModulation(-1,0)},Position.prototype.getRight=function(){return this.getModulation(1,0)},Position.prototype.getUpLeft=function(){return this.getModulation(-1,1)},Position.prototype.getUpRight=function(){return this.getModulation(1,1)},Position.prototype.getDownLeft=function(){return this.getModulation(-1,-1)},Position.prototype.getDownRight=function(){return this.getModulation(1,-1)},Position.prototype.getUpUp=function(){return this.getModulation(0,2)},Position.prototype.getDownDown=function(){return this.getModulation(0,-2)},Position.prototype.getUpUpLeft=function(){return this.getModulation(-1,2)},Position.prototype.getUpUpRight=function(){return this.getModulation(1,2)},Position.prototype.getDownDownLeft=function(){return this.getModulation(-1,-2)},Position.prototype.getDownDownRight=function(){return this.getModulation(1,-2)},Position.prototype.getLeftLeftUp=function(){return this.getModulation(-2,1)},Position.prototype.getLeftLeftDown=function(){return this.getModulation(-2,-1)},Position.prototype.getRightRightUp=function(){return this.getModulation(2,1)},Position.prototype.getRightRightDown=function(){return this.getModulation(2,-1)},Position.prototype.getAllStraight=function(){return arrClean([this.getUp(),this.getDown(),this.getLeft(),this.getRight()])},Position.prototype.getAllDiagonal=function(){return arrClean([this.getUpLeft(),this.getUpRight(),this.getDownLeft(),this.getDownRight()])},Position.prototype.getAllStraightAndDiagonal=function(){return __spreadArrays(this.getAllStraight(),this.getAllDiagonal())},Position.prototype.getAllKnightMovePositions=function(){return arrClean([this.getUpUpLeft(),this.getUpUpRight(),this.getDownDownLeft(),this.getDownDownRight(),this.getLeftLeftUp(),this.getLeftLeftDown(),this.getRightRightUp(),this.getRightRightDown()])},Position.prototype.getRecursive=function(t){var e,o=[];for(e=this;e=t.call(e);)o.push(e);return o},Position.prototype.getUpRecursive=function(){return this.getRecursive(this.getUp)},Position.prototype.getDownRecursive=function(){return this.getRecursive(this.getDown)},Position.prototype.getLeftRecursive=function(){return this.getRecursive(this.getLeft)},Position.prototype.getRightRecursive=function(){return this.getRecursive(this.getRight)},Position.prototype.getUpLeftRecursive=function(){return this.getRecursive(this.getUpLeft)},Position.prototype.getUpRightRecursive=function(){return this.getRecursive(this.getUpRight)},Position.prototype.getDownLeftRecursive=function(){return this.getRecursive(this.getDownLeft)},Position.prototype.getDownRightRecursive=function(){return this.getRecursive(this.getDownRight)},Position.prototype.getAllStraightRecursive=function(){return[this.getUpRecursive(),this.getDownRecursive(),this.getLeftRecursive(),this.getRightRecursive()]},Position.prototype.getAllDiagonalRecursive=function(){return[this.getUpLeftRecursive(),this.getUpRightRecursive(),this.getDownLeftRecursive(),this.getDownRightRecursive()]},Position.prototype.getAllStraightAndDiagonalRecursive=function(){return __spreadArrays(this.getAllStraightRecursive(),this.getAllDiagonalRecursive())},Position}(),l=function(t){function Queen(){return null!==t&&t.apply(this,arguments)||this}return __extends(Queen,t),Queen.prototype.getMovePositionsWithinBounds=function(){var t=this.position;return t?t.getAllStraightAndDiagonalRecursive():[]},Queen}(e),y=function(t){function Rook(){return null!==t&&t.apply(this,arguments)||this}return __extends(Rook,t),Rook.prototype.getMovePositionsWithinBounds=function(){var t=this.position;return t?t.getAllStraightRecursive():[]},Rook.prototype.isCastleMove=function(t){var e=this.game.board.getPieceByPosition(t);return!!e&&("King"===e.type&&!e.hasMoved&&!this.hasMoved)},Rook}(e),v=function(){function Player(t,e){var i,n;if(this.game=t,this.color=e,"white"===e)i="1",n="2";else{if("black"!==e)throw new Error("Invalid color");i="8",n="7"}this.pieces=[new a(this,0,g.fromA1("E"+i)),new l(this,1,g.fromA1("D"+i)),new o(this,2,g.fromA1("C"+i)),new o(this,3,g.fromA1("F"+i)),new c(this,4,g.fromA1("B"+i)),new c(this,5,g.fromA1("G"+i)),new y(this,6,g.fromA1("A"+i)),new y(this,7,g.fromA1("H"+i)),new p(this,8,g.fromA1("A"+n)),new p(this,9,g.fromA1("B"+n)),new p(this,10,g.fromA1("C"+n)),new p(this,11,g.fromA1("D"+n)),new p(this,12,g.fromA1("E"+n)),new p(this,13,g.fromA1("F"+n)),new p(this,14,g.fromA1("G"+n)),new p(this,15,g.fromA1("H"+n))]}return Object.defineProperty(Player.prototype,"moves",{get:function(){var t=this;return this.game.moves.filter((function(e){return e.piece.player===t}))},enumerable:!1,configurable:!0}),Player}(),P=function(){function Game(){this.board=new u(this),this.white=new v(this,"white"),this.black=new v(this,"black"),this.moves=[]}return Game.parseJSON=function(t,e){var o;try{if(o=JSON.parse(t),!e){if(!Number.isInteger(o.length/4))throw new TypeError("Invalid length.");for(var i=0;i<o.length;i++)if(!Number.isInteger(o[i]))throw new TypeError("Expected an array of integers only.")}}catch(t){throw new TypeError("Invalid JSON data. "+t.message)}return o},Game.fromArray=function(t,e){for(var o=new Game,i=0;i<t.length;i+=4)o.move(new g(t[i],t[i+1]),new g(t[i+2],t[i+3]),e);return o},Game.fromJSON=function(t,e){return void 0===e&&(e=!1),this.fromArray(this.parseJSON(t,e),e)},Game.deserialze=function(t,e){return void 0===e&&(e=!1),this.fromArray(function uInt8ToBytes(t){for(var e=t.length,o=new Array(e),i=0;i<e;i++)o[i]=t[i];return o}(t),e)},Object.defineProperty(Game.prototype,"isWhitesTurnToMove",{get:function(){return isEven(this.moves.length)},enumerable:!1,configurable:!0}),Object.defineProperty(Game.prototype,"isBlacksTurnToMove",{get:function(){return!isEven(this.moves.length)},enumerable:!1,configurable:!0}),Object.defineProperty(Game.prototype,"activePlayer",{get:function(){return this.isWhitesTurnToMove?this.white:this.black},enumerable:!1,configurable:!0}),Game.prototype.forEachActivePiece=function(t){for(var e=this.white.pieces,o=this.black.pieces,i=0;i<16;i++)if(!e[i].isTaken&&t(e[i])||!o[i].isTaken&&t(o[i]))return!0},Game.prototype.forEachActiveWhitePiece=function(t){for(var e=this.white.pieces,o=0;o<16;o++)if(!e[o].isTaken&&t(e[o]))return!0},Game.prototype.forEachActiveBlackPiece=function(t){for(var e=this.black.pieces,o=0;o<16;o++)if(!e[o].isTaken&&t(e[o]))return!0},Game.prototype.forEachCurrentPlayerActivePiece=function(t){return this.isWhitesTurnToMove?this.forEachActiveWhitePiece(t):this.forEachActiveBlackPiece(t)},Game.prototype.ensurePosition=function(t){return t instanceof g?t:"string"==typeof t?g.fromA1(t):g.fromXY(t)},Game.prototype.ensurePiece=function(t){return t?t instanceof e?t:this.board.getPieceByPosition(this.ensurePosition(t)):null},Game.prototype.forEachValidMove=function(t,e){var o=this.ensurePiece(e);return o?o.forEachValidMovePosition((function(e){return t(e,o)})):this.forEachCurrentPlayerActivePiece((function(e){return e?e.forEachValidMovePosition((function(o){return t(o,e)})):void 0}))},Game.prototype.move=function(t,e,o){e=this.ensurePosition(e);var i=this.ensurePiece(t);if(!i||!o&&!i.isValidMove(e))throw new Error("Invalid move.");var n=i.game.board.getPieceByPosition(e),r=void 0;return i.isCastleMove(e)?(r=new h(i,e),this.board.registerSwap(r),n&&n.registerMove(new h(n,r.from))):(r=new h(i,e,n),this.board.registerMove(r),n&&n.remove()),i.registerMove(r),this.moves.push(r),this},Game.prototype.clone=function(){for(var t=new Game,e=t.white.pieces,o=t.black.pieces,i=this.moves,n=0;n<i.length;n++){var r=i[n].piece;t.move(("white"===r.color?e:o)[r.index],i[n].to.clone(),!0)}return t},Game.prototype.toJSON=function(){for(var t=this.moves,e=t.length,o=new Array(4*e),i=void 0,n=0;n<e;n++)i=t[n],o[4*n+0]=i.from.x,o[4*n+1]=i.from.y,o[4*n+2]=i.to.x,o[4*n+3]=i.to.y;return o},Game.prototype.serialize=function(){return function bytesToUint8Array(t){for(var e=t.length,o=new Uint8Array(e),i=0;i<e;i++)o[i]=t[i];return o}(this.toJSON())},Game}();t.Bishop=o,t.Board=u,t.Game=P,t.King=a,t.Knight=c,t.Move=h,t.Pawn=p,t.Player=v,t.Position=g,t.Queen=l,t.Rook=y,t.assertValidA1=s,t.assertValidXY=r,t.assertValidXYPoint=n,t.default=P,t.from_1_to_Y=from_1_to_Y,t.from_A1_to_XY=from_A1_to_XY,t.from_A_to_X=from_A_to_X,t.from_XY_to_A1=from_XY_to_A1,t.from_X_to_A=from_X_to_A,t.from_Y_to_1=from_Y_to_1,t.isValidA1=isValidA1,t.isValidXY=isValidXY,t.isValidXYPoint=isValidXYPoint,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=index.umd.min.js.map
